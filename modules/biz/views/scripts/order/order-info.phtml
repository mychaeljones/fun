<?= $this->action('construction', 'production'); ?>
<h1>Internal Order Creation Form </h1>    
    <span class="button" onClick="window.open('/biz/crm/customer/id/<?= $this->user['id'] ?>')" >Customer Info</span><br>
    <span class="button" onClick="history.go(-1);return true;" style="float:right;">Back</span><br>
        
<label for="email">Email</label><?= $this->user['email'] ?> <br>
<label for="businessname">Business Name</label><?= $this->user['businessname'] ?> <br>


<label for="contactname">Contact Name</label> <?= $this->user['firstname'] ?> <?= $this->user['lastname'] ?> <br>
<label for="customertype">Account Rep</label> <?= $this->rep['name'] ?> <br>

<form id="orderForm" method="POST" >

<h2>1. Contact Info </h2>
<label for="contact_email">Contact Email</label> <input type="text" id="contact_email" size="30" name="contact_email" value = "<? echo $this->order['contact_email'] ==''?$this->user['email']:$this->order['contact_email']?>" > <br> 
<label for="contact_phone">Contact Phone</label> <input type="text" id="contact_phone" size="30" name="contact_phone" value = "<? echo $this->order['contact_phone'] ==''?$this->user['contactphone']:$this->order['contact_phone']?>" >  <br>

<h2>2. Items </h2>     

<span id="itemError"></span>
<table cellpadding="0" cellspacing="0" border="0" width="85%" id="items" class="account">    
    <tr>      
        <th>Item</th>     
        <th>Quantity</th>
        <th>Unit Price</th>
        <th>Item Total</th>
        <th>Action</th>
    </tr>

    <?if(!empty($this->order['items'])):?>
        <?$items = unserialize($this->order['items']); ?>
            <?foreach($items as $item):?>
            <?if(is_object($item)):?>
            <tr>          
                <input type ="hidden" class="productId" value="<?= $item->productId?>">          
                
                <?if(!empty($item->options)):?>
                    <td><input type="text" size="50" name="item[]" disabled class="field_input item" value="<?= $item->name?>"/> 
                    <span class="smallButton moreOption">More Options</span></td>
                    <td style="text-align:center;"><?= $item->qty?></td>
                <? else:?>   
                    <td><input type="text" size="50" name="item[]" disabled class="field_input item" value="<?= $item->name?>"/> 
                    </td>     
                    <td><input name="quantity[]" size="5" type="text"  class="field_input quantity" style="text-align:right;" value="<?= $item->qty?>"/></td>
                <? endif;?>
                <td><input type="text" size="10" name="unitPrice[]" disabled class="unitPrice" style="text-align:right;" value="<?= $item->price?>" /></td>       
                <td><input type="text" size="10" name="itemTotal[]" disabled class="field_input itemTotal" style="text-align:right;" value="<?= $item->lineCost?>"/></td>
                
                <td align="center"><a class="smallButton remove">Remove</a></td>
            </tr>
            <?endif;?>
            
            <?if(!empty($item->options)):?>
            
            <?foreach ($item->options as $key=>$option):?>
            
                <tr>              
                <td><?= $option['descriptions']?></td>
                <input type ="hidden" class="item" value="<?= $item->name?>">          
                <td><input name="quantity[]" size="5" type="text"  class="field_input quantity" style="text-align:right;" value="<?= $option['qty']?>"/></td>
                <td colspan='2'></td>
                <td align="center">                   
                    <!--form action="/biz/order/remove-item" method="POST"-->    
                         <input type="hidden" class="productId" name="productId" value="<?= $item->productId ?>">                            
                         <? $options = '';?>
                            <? foreach($option['values'] as $value):?>
                                  <!--input type="hidden" id="itemOptions" class="itemOptions" name="options[value][]" value="<?= $value?>"-->
                            <? $options .= $value.'-';?>
                          <? endforeach;?>
                         <input type="hidden" class="itemOptions" name="options" value="<?= $options ?>">
                         <!--input type="submit" class="smallButton" value="Remove"--> <a class="smallButton remove">Remove</a>                                            
                    <!--/form-->
                </td>                          
                </tr>                
            <?endforeach;?>
            
        <?endif?>
           
        <?endforeach;?>
    <?endif;?>
    
    <tr class="dataRow">   
        <td><input type="text" size="50" name="item[]" class="field_input item" /></td>       
        <td><input name="quantity[]" size="15" type="text"  class="field_input quantity" style="text-align:right;"/></td>
        <td><input type="text" size="10" name="unitPrice[]" disabled class="unitPrice" style="text-align:right;"/></td>       
        <td><input type="text" size="10" name="itemTotal[]" disabled class="field_input itemTotal" style="text-align:right;"/></td>
        <td></td>
    </tr>  

    
</table>

<div id="myoption"></div>
<div id="add_row" class="button">+ Item</div>    

 <?if(!empty($this->order['items']) && isset($items['subTotal'])):?>
    <div style="margin-left:56%;">    
    <b>Merchant Total</b>
    <span style="margin-left: 2em;"><b>$<?= number_format($items['subTotal'], 2, '.', ',');?></b></span>
    </div>
<?endif;?>


<div style="margin-top: 10px;"></div>
<h2>3. Shipping Option</h2> 
<div id ="userAddress">
    <?= $this->partial('order/_shipping-address.phtml', array('addresses'=>$this->addresses));?>
</div>
<div style ="clear: both;"></div>
  
<div id="dialog_edit_address">
	<div id="edit_address"></div>
</div>

<div id="dialog_add_address">
    <div id="add_address"></div>
</div>   

<div id="dialog_get_option">
    <div id="get_option"></div>
</div> 

<div id="dialog_add_card">
    <div id="add_card"></div>
</div>


<div style ="clear: both;"></div>
<div id="shippingOption"></div>

<br><h2>4. Payment Option</h2>
1.  Credit Card:   <a class="button add_card">Add a new card </a><br>
<? if (!empty($this->profiles)):?>
   <?  $request = new Application_Service_AuthorizeNetCIM;?>
   <? $index = 0?>
   <?  foreach ($this->profiles as $profile):?>
   <?       $paymentProfile = $request->getCustomerPaymentProfile($profile['profile_id'], $profile['payment_profile_id']);             
            $card = $paymentProfile->xml->paymentProfile->payment->creditCard;
            //$billTo = $paymentProfile->xml->paymentProfile->billTo
   ?>            
      <input type="radio" name="payment" value="<?=  $profile['payment_profile_id'] ?>" <? if($this->user['payment_option'] == 'card' & $index == 0) echo 'checked'; ?>>
        <?= $profile['type'] ?>  <?= $card->cardNumber ?>  | <?php echo $profile['month'].'/'.$profile['year']?><br>
      <? ++$index;?>
<?  endforeach;?>

      
 <? endif; ?>
 <br>
 <input type="radio" name="payment" value="wire" <? if($this->user['payment_option'] == 'wire') echo 'checked'; ?>>2. Wire <br>
 <input type="radio" name="payment" value="wu" >3. Western Union<br> 
 <input type="radio" name="payment" value="mg">4. Money Gram <br>
 <input type="hidden" name="userId" value="<?= $this->user['id']?>">
 
 <br><h2>5. Notes: (optional)</h2><br> 
        <textarea name="comment" style="height:100px; width: 400px;" ></textarea>
 
        <div id ="error"></div>
 <input type="submit" id="submit" value="Sumit"  class="button" style="display:none;">
</form>            
            
            
<script>


$(document).ready(function(){
    // use new classes to setup calc function using live()
    $('.item').on('change', function(){            
        postOption($(this).closest('tr'));
    });
    $('.moreOption').on('click', function(){        
        $row = $(this).closest('tr');
        postOption($row);
        //$row.find('.item').prop('disabled', true);
    });
       
    $('.quantity').on('change',function(){        
        postPrice($(this).closest('tr'));               
    });
    
     // bind item autocomplete to first row
     $('.item').bind("keyup", itemAutoComplete )    
      var numberExistingRows=1;      
     //  use "ADD" button to add new row
      $('#add_row').click(function(){
     
          // keep track of number of rows for input names
          numberExistingRows++;
         // clone a row
         var $row= $('.dataRow:last').clone();
                   
          // strip previous values and fix names of inputs
          $row.find('input').each(function(){
              var $input=$(this);// cache this input into jQuery object in lieu of using $(this) in below functions for clarity and performance
              $input.val("");// reset value to none
              
              // fix names
              var thisInputName=$input.attr('name').split('_')[0] +'_'+numberExistingRows;
              $input.attr('name', thisInputName)
               
          });   
         // bind item auto complete to new row. SInce using classes now makes it much easier to locate correct input
         $row.find('.item').bind("keyup", itemAutoComplete) ;   
         //$row.find('.item').on("change", getPrice) ;
         $row.find('.item').on("change", getOption);         
         $row.find('.quantity').on("change", getPrice);
            
           // for real autocomplete 
            // $row.find('.tbTitle').autocomplete(// options)
            
         // append to table id=tblInventoryItems
         $('#items').append( $row);     
          
    });
    
     $('.edit_address').click(function() {       
          which = ($(this).attr("id")).split("_");      
            $('#edit_address').html('');            
            $('#edit_address').load('/biz/order/editaddress/id/' + which[1]);
	    $('#dialog_edit_address').dialog('open');
	});
        
     $('.add_address').bind('click', function(){   
     //$('.add_address').click(function() {               
          //which = ($(this).attr("id")).split("_");             
            $('#add_address').html('');            
            $('#add_address').load('/biz/order/addaddress/id/' + <?= $this->user['id']?>);
	    $('#dialog_add_address').dialog('open');
     });
     
    $('.add_card').bind('click', function(){                       
            $('#add_card').html('');            
            $('#add_card').load('/biz/crm/add-card/id/' + <?=  $this->user['id'] ?> );
	    $('#dialog_add_card').dialog('open');
    });   
        

    $('#dialog_add_card').dialog({
      		title: 'Add Payment Card',
		autoOpen:false,
		width: 550,
		maxWidth:600, 
		modal:true,
		resizable:true,
                position:['middle',20],
		buttons: {
                    Add: function() {
                      
                       // e.preventDefault();
			dataString = $("#card").serialize(); 
                  
				$.ajax({                                    
				type: "POST",
				url: '/biz/crm/add-card/id/' +  <?= $this->user['id'] ?>,
				data: dataString,
				dataType: 'html',
				success: function(data) {
                           
                                   if (data == 'success') {                                   
                                         window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;                                 
                                     } else { 
                                         $("#message").html(data);                                         
                                     }
				}
			});
                    },
		    Cancel: function(){
			$('#add_card').html('');
			$(this).dialog('close');
                    }
		}
	});    
        
        

    $('#dialog_edit_address').dialog({
		title: 'Edit Address',
		autoOpen:false,
		minWidth:600,
		modal:true,
		resizable:true,
                position:['middle',20],
		buttons: {
                    Edit: function() {                      
                       // e.preventDefault();
			dataString = $("#address").serialize();                    
                        $.ajax({                                    
				type: "POST",
				url: "/biz/order/editaddress/id/"+which[1],
				data: dataString,
				dataType: 'html',
				success: function(data) {
                                    if (data == 'success') {                                                                          
                                        /*$("#dialog_edit_address").dialog('close');
                                        $("#block_" + which[1]).html(data);
                                        $(".select").show();                                 
                                        $(".selected").hide();  
                                        $("#shippingOption").empty();*/ 
                                        
            
                                         window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;
                                     } else {
                                         $("#message").html(data);                                                                       
                                     }
                                     
				}
			});
                    },
		    Cancel: function() {
			$('#edit_address').html('');
			$(this).dialog('close');
                    }
		}
	});
    
      $('#dialog_add_address').dialog({
      		title: 'Add Address',
		autoOpen:false,
		minWidth:600,
		modal:true,
		resizable:true,
                position:['middle',20],
		buttons: {
                    Add: function() {
                      
                       // e.preventDefault();
			dataString = $("#address").serialize();  
                  
				$.ajax({
                                    
				type: "POST",
				url: "/biz/order/addaddress/id/"+ <?= $this->user['id']?>,
				data: dataString,
				dataType: 'html',
				success: function(data) {
                                   if (data == 'success') {                                                                                                                 
                                         window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;
                                     } else {
                                         $("#message").html(data);                                                                       
                                     }
				}
			});
                    },
		    Cancel: function(){
			$('#add_address').html('');
			$(this).dialog('close');
                    }
		}
	});
        
        $('#dialog_get_option').dialog({
      		title: 'Select Product Options',
		autoOpen:false,
		width: 550,
		maxWidth:600, 
		modal:true,
		resizable:true,
                position:['middle',20],
		buttons: {
                    Done: function() {
                      
                     /* $("#my-option").load("/biz/order/get-options/item", {    
                        item:     'Advanced Kit'     
                      });*/
                      //  e.preventDefault();
                      //alert($("#optionForm").serialize());
			dataString = $("#optionForm").serialize() + '&'+ $("#orderForm").serialize();                  
				$.ajax({                                    
				type: "POST",
				url: '/biz/order/process-options',
                                //optionForm: $("#optionForm").serialize(),
				data:  dataString,
				dataType: 'html',
				success: function(data) {
                                    if (data == 'success') {                                       
                                        window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;
                                    } else {
                                        $("#optionError").html(data).addClass("error");
                                    }
				}
			});
                    },
		    Cancel: function(){                   
			$('#get_option').html('');
			$(this).dialog('close');
                    }
		}
	});    
        
     $('.remove').bind('click', function(){   
     //dataString = $("#removeForm").serialize();    
     $row = $(this).closest('tr');
       var productId= $row.find('.productId').val();
       var options = $row.find('.itemOptions').val(); 
      
       $.post(
		'/biz/order/remove-item',
		{productId: productId,
                 options: options,
                 userId: <?= $this->user['id']?>                            
		},
		function(response)
		{
                    if (response === 'error'){
                       $("#itemError").html(response).addClass("error"); 
                    }  else { 
                       window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;                                            
                   }
                },
		    'html'
           )
       
       
     });
        
        
        
       
        $('.select').bind('click', function(){            
            //$("#shippingOption").html("<img src='/biz/public/image/utility/ajax-loader.gif'>");           
            $("#shippingOption").empty().addClass("loader");            
            $(".select").show();                                 
            $(".selected").hide();  
            $('#selected_'+this.id).show();
            $('#'+this.id).hide();
            $("#submit").show();   
                            
            dataString = $("#orderForm").serialize();                  
		$.ajax({                                    
			type: "POST",
			url: "/biz/order/shipping-rate/id/" + this.id,
			data: dataString,
                        dataType: 'html',
			success: function(data) {                                                           
                             $("#shippingOption").html(data); 
                             $("#shippingOption").removeClass("loader");
                        }
                });
        });
        
       $("#orderForm").submit(function(e){		
	    e.preventDefault();
            dataString = $("#orderForm").serialize();                  
		$.ajax({                                    
			type: "POST",
			url: "/biz/order/submit",
			data: dataString,
                        dataType: 'json',
			success: function(data) {                                       
                            //$("#shippingOption").html(data); 
                            if(data.status == 'success') {
                               // $("#userName").html('');
                               window.location.href = '/biz/order/thank-you/id/' + data.orderId;
                            } else {
                                $("#error").html(data.error).addClass("error");
                            }
                        }
                });
        });    
       
});

function itemAutoComplete(){       
      //  var text=$(this).val().toString();
        //$(this).val(text + text + text);   
         $(this).autocomplete({
                source: function(request, response)
		{
			$.post(
				'/biz/product/user-autosuggest',
				{ queryString: request.term, 
                                  field: this.element.context.id,
                                  user_id: <?= $this->user['id']?>
                                },
				function(list) { response(list); },
				'json'
			);
		},
		minLength: 2
            });
}
/*function getPrice() {
       
        clearShippingOption();
        var $row=$(this).closest('tr');// all based on parent row
        var item= $row.find('.item').val();
        var quantity= $row.find('.quantity').val();
               
        if (item != '' && quantity > 0) {
         $.post(
		'/biz/order/get-price',
		{item: item,
                 userId: <?= $this->user['id']?> ,
                 quantity: quantity,
                
		},
		function(response)
		{
                    if (response.message == 'error') {
                        alert('No such Product found for this account');
                        $row.find('.item').val('');
                        $row.find('.quantity').val('');
                    } else {
                        $row.find('.unitPrice').val(response.unitPrice);                                  
                        $row.find('.itemTotal').val(response.itemTotal);
                   }
                },
		    'json'
                )  
           
               
        }
}
*/

function clearShippingOption() {
     $(".select").show();                                 
     $(".selected").hide();  
     $("#shippingOption").empty();
     $("#error").empty().removeClass("error");     
     $("#submit").hide();
}

function postOption($row) {
    clearShippingOption();
   // $row.find('.quantity').val('');
    //$row.find('.unitPrice').val('');
    //$row.find('.itemTotal').val('');
            
    var item= $row.find('.item').val();
    if (item !== '') {
    $.post(
		'/biz/order/get-options',
		{item: item,
                 userId: <?= $this->user['id']?>                            
		},
		function(response)
		{
                    if (response === 'error'){                      
                      $("#itemError").html('No such product found for this user.').addClass("error"); 
                      $row.find('.quantity').prop('disabled', true);
                      $row.find('.item').addClass("errorhighlight");
                      return;
                    } else if (response === 'nah') {                        
                        $row.find('.quantity').prop('disabled', false);                        
                        return;
                    }  else { 
                       
                       $("#itemError").html('').removeClass("error");
                      
                       $row.find('.quantity').prop('disabled', true);
                       $('#get_option').html('');                     
                       $("#get_option").load("/biz/order/get-options", {    
                            item:     item,
                            userId: <?= $this->user['id']?>                         
                       });
                       $('#dialog_get_option').dialog('open');                       
                   }
                },
		    'html'
           )
      } 
}

/*function getOldRowOption($row) {
      postOption($row);       
}*/

function getOption() {    
    postOption($(this).closest('tr'));        
}

function getPrice() {    
    postPrice($(this).closest('tr'));        
}

function postPrice($row) {
        clearShippingOption();            
        var item= $row.find('.item').val();
        var quantity= $row.find('.quantity').val();
        var options = $row.find('.itemOptions').val(); 
        
        if (item != '' && quantity > 0) {
         $.post(
		'/biz/order/get-price',
		{contact_email: $("#contact_email").val(),
                 contact_phone: $("#contact_phone").val(),
                 item: item,
                 userId: <?= $this->user['id']?> ,
                 quantity: quantity, 
                 options: options
		},
		function(response)
		{
                    if (response == 'success') {
                        window.location.href = '/biz/order/order-info/id/' + <?= $this->user['id']?>;
                       // alert('No such Product found for this account');
                       // $row.find('.item').val('');
                       // $row.find('.quantity').val('');
                    } else {
                       // $row.find('.unitPrice').val(response.unitPrice);                                  
                       // $row.find('.itemTotal').val(response.itemTotal);
                        $("#itemError").html(response).addClass("error"); 
                        //$row.find('.quantity').prop('disabled', true);
                        $row.find('.item').addClass("errorhighlight");
                        $row.find('.quantity').addClass("errorhighlight");
                   }
                },
		    'html'
                )           
        }
}
 
 </script>
